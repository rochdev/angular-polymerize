!function(n){"use strict";function t(n){function t(t){[].concat(t).forEach(function(t){n.directive(t,["polymerize",function(n){return{link:n.link}}])})}this.$get=["$injector",i],this.directive=t}function e(n,t,e){function i(i,o,r){function c(n){o.on(r.$attr[n].substr(3),function(){i.$evalAsync(r[n])})}function a(n){var t=new e.PathObserver(i,r[n]);e.wrap(o[0]).bind(r.$attr[n],t)}function f(n){var t=new e.PathObserver(s(),n);t.open(function(){i.$apply()})}function u(n){e.Platform&&void 0===Object.observe&&i.$watch(r[n],function(){t(function(){e.Platform.performMicrotaskCheckpoint()},0,!1)})}function s(){return o[0].polymerShadowRenderer_?o[0].polymerShadowRenderer_.host:o[0]}var d=s()._publishNames;Object.keys(r.$attr).forEach(function(t){if(0===r.$attr[t].indexOf("on-"))c(t);else if(-1!==d.indexOf(t)){var e=n(r[t]);e.assign?(a(t),f(t),u(t)):s()[t]=e(i)}})}this.link=i}function i(n){return n.instantiate(["$parse","$timeout","$window",e])}window.Polymerize=e;var o=n.module("polymerize",[]);o.provider("polymerize",["$compileProvider",t]),e.bootstrap=function(t,e,i){window.addEventListener("polymer-ready",function(){n.bootstrap(t,e,i)})}}(window.angular);
//# sourceMappingURL=angular-polymerize.min.js.map