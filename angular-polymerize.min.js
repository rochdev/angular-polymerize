!function(n){"use strict";function t(n){function t(t){[].concat(t).forEach(function(t){n.directive(t,["polymerize",function(n){return{link:n.link}}])})}this.$get=["$injector",e],this.directive=t}function o(n,t,o){function e(n,e,i){function r(t){e.on(i.$attr[t].substr(3),function(){n.$evalAsync(i[t])})}function c(t){var r=new o.PathObserver(n,i[t]);o.wrap(e[0]).bind(i.$attr[t],r)}function a(t){var e=new o.PathObserver(f(),t);e.open(function(){n.$apply()})}function u(e){o.Platform&&void 0===Object.observe&&n.$watch(i[e],function(){t(function(){o.Platform.performMicrotaskCheckpoint()},0,!1)})}function f(){return e[0].polymerShadowRenderer_?e[0].polymerShadowRenderer_.host:e[0]}var s=f()._publishNames;Object.keys(i.$attr).forEach(function(n){0===i.$attr[n].indexOf("on-")?r(n):-1!==s.indexOf(n)&&(c(n),a(n),u(n))})}this.link=e}function e(n){return n.instantiate(["$parse","$timeout","$window",o])}window.Polymerize=o;var i=n.module("polymerize",[]);i.provider("polymerize",["$compileProvider",t]),o.bootstrap=function(t,o,e){window.addEventListener("polymer-ready",function(){n.bootstrap(t,o,e)})}}(window.angular);
//# sourceMappingURL=angular-polymerize.min.js.map